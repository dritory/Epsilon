package Epsilon.client.Models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;

import org.lwjgl.opengl.GL11;

import Epsilon.tilenentity.TileChaosCrystal;
import cpw.mods.fml.client.FMLClientHandler;
// Date: 31.03.2013 20:05:40
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

public class ChaosCrystalModel extends ModelBase {

    // fields
    ModelRenderer Base_Height;
    ModelRenderer Shape1;
    ModelRenderer Shape2;
    ModelRenderer Shape3;
    ModelRenderer Shape4;
    ModelRenderer Shape5;
    ModelRenderer Shape6;
    ModelRenderer Shape7;
    ModelRenderer Shape8;
    ModelRenderer Shape9;
    ModelRenderer Shape10;
    ModelRenderer Shape11;

    public ChaosCrystalModel() {
        textureWidth = 64;
        textureHeight = 32;

        Base_Height = new ModelRenderer(this, 0, 0);
        Base_Height.addBox(0F, 0F, 0F, 4, 14, 4);
        Base_Height.setRotationPoint(-2F, 10F, -2F);
        Base_Height.setTextureSize(64, 32);
        Base_Height.mirror = true;
        setRotation(Base_Height, 0F, 0F, 0F);
        Shape1 = new ModelRenderer(this, 16, 0);
        Shape1.addBox(-1.5F, 0F, 0F, 3, 5, 3);
        Shape1.setRotationPoint(-4.5F, 11F, -2.5F);
        Shape1.setTextureSize(64, 32);
        Shape1.mirror = true;
        setRotation(Shape1, 0.5235988F, 1.623156F, 0.4666948F);
        Shape2 = new ModelRenderer(this, 28, 0);
        Shape2.addBox(0F, 0F, 0F, 5, 2, 2);
        Shape2.setRotationPoint(-4F, 8F, 2F);
        Shape2.setTextureSize(64, 32);
        Shape2.mirror = true;
        setRotation(Shape2, 1.045648F, 0.7156883F, 0.896934F);
        Shape3 = new ModelRenderer(this, 42, 0);
        Shape3.addBox(0F, 0F, 0F, 3, 6, 3);
        Shape3.setRotationPoint(0F, 7F, -3F);
        Shape3.setTextureSize(64, 32);
        Shape3.mirror = true;
        setRotation(Shape3, 0.1183519F, -0.5530318F, 0F);
        Shape4 = new ModelRenderer(this, 54, 0);
        Shape4.addBox(0F, 0F, 0F, 2, 4, 2);
        Shape4.setRotationPoint(2F, 9F, 1F);
        Shape4.setTextureSize(64, 32);
        Shape4.mirror = true;
        setRotation(Shape4, -0.2974289F, 0F, 1.07818F);
        Shape5 = new ModelRenderer(this, 54, 0);
        Shape5.addBox(0F, 0F, 0F, 2, 4, 2);
        Shape5.setRotationPoint(2F, 11F, -3F);
        Shape5.setTextureSize(64, 32);
        Shape5.mirror = true;
        setRotation(Shape5, 0F, 0.4461433F, 0.8551081F);
        Shape6 = new ModelRenderer(this, 42, 0);
        Shape6.addBox(0F, 0F, 0F, 3, 6, 3);
        Shape6.setRotationPoint(5F, 14F, -1F);
        Shape6.setTextureSize(64, 32);
        Shape6.mirror = true;
        setRotation(Shape6, 0F, -0.1745329F, 1.33781F);
        Shape7 = new ModelRenderer(this, 42, 0);
        Shape7.addBox(0F, 0F, 0F, 3, 6, 3);
        Shape7.setRotationPoint(-4F, 13F, 3F);
        Shape7.setTextureSize(64, 32);
        Shape7.mirror = true;
        setRotation(Shape7, -0.669215F, 0F, -0.4461433F);
        Shape8 = new ModelRenderer(this, 42, 0);
        Shape8.addBox(0F, 0F, 0F, 3, 6, 3);
        Shape8.setRotationPoint(4F, 11F, 3F);
        Shape8.setTextureSize(64, 32);
        Shape8.mirror = true;
        setRotation(Shape8, -0.6510388F, 0F, 0.7997532F);
        Shape9 = new ModelRenderer(this, 54, 0);
        Shape9.addBox(0F, 0F, 0F, 2, 4, 2);
        Shape9.setRotationPoint(-4F, 18F, -4F);
        Shape9.setTextureSize(64, 32);
        Shape9.mirror = true;
        setRotation(Shape9, 0.6889403F, 0.1115358F, -1.152537F);
        Shape10 = new ModelRenderer(this, 42, 0);
        Shape10.addBox(0F, 0F, 0F, 3, 6, 3);
        Shape10.setRotationPoint(2F, 16F, -5F);
        Shape10.setTextureSize(64, 32);
        Shape10.mirror = true;
        setRotation(Shape10, 0.8551081F, -0.2602503F, 0.9294653F);
        Shape11 = new ModelRenderer(this, 54, 0);
        Shape11.addBox(0F, 0F, 0F, 2, 4, 2);
        Shape11.setRotationPoint(-5F, 14F, 1F);
        Shape11.setTextureSize(64, 32);
        Shape11.mirror = true;
        setRotation(Shape11, 1.298979F, 1.506147F, -0.9840972F);
    }

    public void render(TileChaosCrystal chaos, double x, double y, double z) {

        GL11.glPushMatrix();
        GL11.glDisable(GL11.GL_LIGHTING);
        GL11.glTranslatef((float) x + 0.5F, (float) y + 1.4F, (float) z + 0.5F);
        GL11.glScalef(.06f, .06f, .06f);
        // GL11.glRotatef(45F, 0F, 1F, 0F);
        GL11.glRotatef(180F, 1F, 0F, 0F);
        FMLClientHandler.instance().getClient().renderEngine.bindTexture("/Epsilon/textures/blocks/ChaosCrystal.png");
        Base_Height.render(1F);
        Shape1.render(1F);
        Shape2.render(1F);
        Shape3.render(1F);
        Shape4.render(1F);
        Shape5.render(1F);
        Shape6.render(1F);
        Shape7.render(1F);
        Shape8.render(1F);
        Shape9.render(1F);
        Shape10.render(1F);
        Shape11.render(1F);
        GL11.glEnable(GL11.GL_LIGHTING);
        GL11.glPopMatrix();

    }

    public void render(float scale) {
        Base_Height.render(scale);
        Shape1.render(scale);
        Shape2.render(scale);
        Shape3.render(scale);
        Shape4.render(scale);
        Shape5.render(scale);
        Shape6.render(scale);
        Shape7.render(scale);
        Shape8.render(scale);
        Shape9.render(scale);
        Shape10.render(scale);
        Shape11.render(scale);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z) {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

    public void setRotationAngles(float f, float f1, float f2, float f3,
            float f4, float f5) {
        super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
    }

}
